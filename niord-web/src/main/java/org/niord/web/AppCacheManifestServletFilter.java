/*
 * Copyright 2016 Danish Maritime Authority.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.niord.web;

import org.niord.core.NiordApp;
import org.slf4j.Logger;

import jakarta.inject.Inject;
import jakarta.servlet.Filter;
import jakarta.servlet.FilterChain;
import jakarta.servlet.FilterConfig;
import jakarta.servlet.ServletException;
import jakarta.servlet.ServletRequest;
import jakarta.servlet.ServletResponse;
import jakarta.servlet.annotation.WebFilter;
import java.io.IOException;
import java.io.PrintWriter;

/**
 * In development, return a dummy app cache manifest with no caching.
 * In test and production mode, return the real cache manifest,
 * as generated by the niord-web maven plug-in.
 */
@WebFilter(urlPatterns={"/index.manifest"})
public class AppCacheManifestServletFilter implements Filter {

    @Inject
    Logger log;

    @Inject
    NiordApp app;

    /** Constructor **/
    public AppCacheManifestServletFilter() {
    }

    /** {@inheritDoc} */
    @Override
    public void init(FilterConfig filterConfig) throws ServletException {
    }

    /** {@inheritDoc} */
    @Override
    public void destroy() {
    }

    /**
     * In development, return a dummy manifest with no caching.
     * In test and production mode, return the real cache manifest,
     * as generated by the niord-web maven plug-in.
     *
     * @param req the request
     * @param res the response
     * @param chain the filter chain
     */
    @Override
    public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain) throws IOException, ServletException {

        try {
            if (app.getExecutionMode() == NiordApp.ExecutionMode.DEVELOPMENT) {

                String templateCache
                      = "CACHE MANIFEST\n" +
                        "\n" +
                        "# Placeholder cache manifest file.\n" +
                        "\n" +
                        "CACHE:\n" +
                        "\n" +
                        "NETWORK:\n" +
                        "*\n" +
                        "\n";

                res.setContentType("text/cache-manifest;charset=UTF-8");
                PrintWriter out = res.getWriter();
                out.write(templateCache);
                out.flush();
                out.close();

            } else {

                // Proceed to load the index.manifest generated by maven
                chain.doFilter(req, res);
            }
        } catch (Exception e) {
            log.error("Failed generating proper index.manifest application cache", e);
        }
    }
}
